/**
*引入jar包定义
*这个文件中定义的jar包可以直接在子项目中使用，不需要再次使用 apply from 这个语句
*/
apply from: 'dependency.gradle'


// 所有子项目的通用配置
subprojects { 
    apply plugin: 'java'
    apply plugin: 'idea'

    version = '1.0.0'  

    // JVM 版本号要求
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    

    repositories {
        //阿里云镜像
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
        mavenCentral()
    }

    dependencies {
        ext.jarTree = fileTree(dir: 'lib', include: '**/*.jar',exclude:'**/spring-3.2.jar')
        ext.rootProjectLibs = new File(rootProject.rootDir, 'lib').getAbsolutePath()
        ext.jarTree += fileTree(dir: rootProjectLibs, include: '**/*.jar')

        compile jarTree

        // 测试依赖
        testCompile(
                libraries.'junit',
                libraries.'spring-boot-test',
        )
    }

    
    jar {
        manifest {
            attributes("Manifest-Version": "1.0")
            attributes("Created-By": "myapplication")
            attributes("Implementation-Title": "myapplication")
            attributes("Implementation-Version": "1.0")
        }
    }
	
    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }
	
	gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}










